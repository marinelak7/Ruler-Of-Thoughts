


Λογική του κώδικα:


Σημείωση: Στην κλάση GameActivityWithSpinner, υπάρχουν κάποια σχόλια στις γραμμές 95-98. Αν αυτές τις γραμμές
τις βγάλετε από τα σχόλια στην οθόνη με την παρτίδα της εφαρμογής θα εμφανιστούν 2 imagebuttons, ένα στα αριστερά
και ένα στα δεξιά. Το κουμπί στα αριστερά με το όνομα "SHOW ANSWER", εμφανίζει ένα toast message με τα χρώματα και
τις θέσεις του κρυφού κώδικα. Αν βάλετε με αυτή τη σειρά εκείνα τα χρώματα κερδίζετε το παιχνίδι. Το κουμπί στα
δεξιά με το όνομα "FORCE DEFEAT", τελειώνει την παρτίδα με ήττα. Είναι σαν να έχετε χάσει, δηλαδή έχουν τελειώσει
και οι 9 γύροι. Τα συγκεκριμένα buttons δημιουργήθηκαν για τον έλεγχο της εφαρμογής, αλλά μπορούν να χρησιμοποιηθούν
σε περίπτωση που δε θέλετε να παίξετε όλους τους γύρους του παιχνιδιού, για να δείτε την λειτουργικότητα της 
εφαρμογής πιο άμεσα.


Αφού έχει ξεκινήσει καινούργια παρτίδα, την λογική την αναλαμβάνει η κλάση GameActivityWithSpinner.
Δημιουργούμε έναν διδιάστατο πίνακα που θα αποθηκεύει αντικείμενα της κλάσης Pegs. Αυτή η κλάση χρησιμοποιείται
για να αποθηκεύσει τα ids των imagebuttons που αναπαρηστούν τις επιλογές του game για κάθε προσπάθεια. Επίσης η
κλάση χρησιμοποιείται για να αποθηκεύσει το χρώμα-επιλογή του παίκτη, έτσι ώστε όταν γίνει ο έλεγχος για το αν
είναι σωστή η προσπάθεια, να μπορεί να γίνει η σύγκριση με τα χρώματα του κρυφού κωδικού. Δημιουργούνται επίσης
τρεις πίνακες, όπου οι δύο αποθηκεύουν τα ids των textviews που βρίσκονται στα αριστερά και στα δεξιά των
προσπαθειών και αναπαριστούν τους δείκτες σωστής επιλογής χρώματος-σωστής θέσης και σωστής επιλογής χρώματος-
λάθος θέσης. Ο τρίτος πίνακας έχει τα ids των floating action buttons τα οποία είναι κρυφά εξαρχής και εμφανίζονται
όταν η συγκεκριμένη προσπάθεια έχει σε όλες τις θέσεις χρώματα, που δεν είναι το μαύρο χρώμα. Στα imagebuttons 
που αναπραριστούν τις θέσεις του παιχνιδιού, υπάρχει μία μέθοδος όπου μόλις πατηθούν ενεργοποιήται. Πρώτα από όλα,
γίνεται έλεγχος για το αν η θέση που επέλεξε ο παίκτης είναι στον τρέχον γύρο. Αφού πάρουμε το id του συγκεκριμένου
imagebutton που επιλέχθηκε μέσω της getId() της View κλάσης, ελέγχουμε αν βρίσκεται στη γραμμή εκείνη που δείχνει 
τον τρέχον γύρο μέσω της μεταβλητής current_turn, η οποία αυξάνεται στο τέλος του κάθε γύρου, αν δεν έχει βρεθεί
ο σωστός κωδικός ή δεν έχουν τελειώσει οι γύροι. Αν η θέση ανήκει σε αυτόν το γύρο, η μέθοδος δημιουργεί ένα
dialog το οποίο περιέχει ένα spinner με επιλογές χρωμάτων. Μόλις πατηθεί το OK button, η μέθοδος έχει υπερφορτωμένη 
την setOnClickListener μέθοδο, έτσι ώστε να κάνει έλεγχο σχετικά με το ποιο χρώμα επιλέχθηκε και αντίστοιχα,
στον διδιάστατο πίνακα όπου αποθηκεύονται τα αντικείμενα στέλνουμε στην αντίστοιχη θέση που επιλέχθηκε το
χρώμα που επέλεξε ο χρήστης για να αποθηκευτεί στο αντικείμενο. Η μέθοδος των imagebuttons πριν τελειώσει, 
καλεί μία άλλη μέθοδο, έτσι ώστε να γίνει ο έλεγχος των επιλογών του παίκτη. Ο πρώτος έλεγχος αναγνωρίζει το
αν η συγκεκριμένη προσπάθεια είναι ολοκληρωμένη, δηλαδή δεν υπάρχει το μαύρο χρώμα σε καμία από τις 4 θέσεις.
Αν είναι συμπληρωμένη, η μέθοδος εμφανίζει το floating action button που βρίσκεται δεξιά της συγκεκριμένης 
προσπάθειας. Σε περίπτωση που ο παίκτης αλλάξει άποψη για κάποια επιλογή και βάλει στη θέση της το μαύρο χρώμα,
η μέθοδος κρύβει το floating action button, για να μην επιλεχθεί. Αν το floating action button εμφανιστεί, το οποίο
είναι ένα τικ σύμβολο, το οποίο έχει ως σκοπό να ελέγξει την προσπάθεια του παίκτη με αυτή του κρυφού κωδικού.
Τα floating action buttons τα οποία βρίσκονται στα δεξιά κάθε προσπάθειας, είναι κρυφά εξαρχής. Μόλις φανερωθεί κάποιο,
εκτελώντας τα παραπάνω βήματα, ο παίκτης μπορεί να το πατήσει για να γίνει ο έλεγχος. Υπάρχει μία μέθοδος για κάθε
floating action button, η οποία κάνει το εξής: υπάρχουν δύο hash tables, όπου το ένα αποθηκεύει το μοναδικά χρώματα
με τις αντίστοιχες εμφανίσεις στο κρυφό κωδικό, έχοντας ως κλειδί τα χρώματα (String) και τιμές τον αριθμό εμφανίσεων
(Integer). Το άλλο hash table αποθηκεύει με την ίδια λογική, τις επιλογές του χρήστη για την συγκεκριμένη προσπάθεια.
Δημιουργείται ένα αντίγραφο του hash table του κρυφού κωδικού για να παραμείνει αναλοίωτο το πρωτότυπο, ενώ το hash table
της προσπάθειας του παίκτη κάθε φορά διαγράφει τις τιμές, έτσι ώστε να εισαχθούν οι καινούργιες επιλογές του χρήστη 
στην επόμενη προσπάθεια. Στο σημείο αυτό ακολουθεί μία επαναληπτική μέθοδος, η οποία ελέγχει αν στις αντίστοιχες θέσεις
του κρυφού κωδικού και της προσπάθειας του παίκτη, βρίσκονται τα ίδια χρώματα. Αν βρεθούν κάποια υπάρχει μία μεταβλητή,
red_index η οποία αποθηκεύει τον αριθμό σωστών χρωμάτων-θέσεων, ενώ ταυτόχρονα αλλάζουν οι τιμές στο hash table του 
χρήστη μειόνοντας τις εμφανίσεις αυτών. Στην συνέχεια κάνουμε μία ακόμη επαναληπτική διαδικασία, όπου βλέπουμε ποια
χρώματα βρίσκονται και στα δύο hash tables. Αν υπάρχει κάποιο τότε, στην μεταβλητή white_index αποθηκεύουμαι τον 
μικρότερο αριθμό εμφανίσεων, και όχι το μεγαλύτερο γιατί κάποιες εμφανίσεις θα εμφανίζονται διπλές/τριπλές.
Αφού τελειώσουν οι συγκρίσεις, γίνεται ο έλεγχος για το αν η μεταβλητή red_index έχει την τιμή 4, το οποίο σημαίνει
ότι οι απαντήσεις που έδωσε ο χρήστης βρίσκονται στις αντίστοιχες θέσεις με του κρυφού κωδικού. Άρα έχει κερδίσει.
Αν κερδίσει πηγαίνει στην κλάση Results, όπου θα ζητηθεί το όνομα για την προσπάθεια. Πριν ξεκινήσει η κλάση,
αποθηκεύουμαι σε ένα bundle ο χρόνος που έκανε ο χρήστης να ολοκληρωθεί η παρτίδα, ξεκινώντας από την εμφάνιση της 
οθόνης του παιχνιδιού μέχρι και όταν γίνει ο έλεγχος ότι κέρδισε. Επίσης στέλνονται και οι πόντοι με βάση το ποια 
προσπάθεια τελείωσε. Αν δεν έχει κερδίσει ο παίκτης, εμφανίζονται στα αριστερά και στα δεξιά οι τιμές των μεταβλητών
white_index και red_index αντίστοιχα, για να βοηθηθεί ο παίκτης στις επόμενες προσπάθειες. Αυξάνεται η τιμή της
μεταβλητής που αποθηκεύουν τους τρέχον γύρους (current_turn) και γίνεται ο έλεγχος για το αν έχει χάσει ο παίκτης
δηλαδή αν οι τρέχον γύροι έχουν ξεπεράσει τους 9. Αν έχει χάσει ο παίκτης εμφανίζεται ένα dialog που δείχνει στον
παίκτη ότι έχει χάσει και ζητάει το όνομα του για να αποθηκευτεί η προσπάθεια. 